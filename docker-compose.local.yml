version: "3"
services:
  ##########
  # Database
  ##########
  database:
    image: postgres:16.0 # See: https://hub.docker.com/_/postgres
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - PGPORT=5432 # Local database port
      - POSTGRES_DB=${DATABASE_DB}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./database/data:/var/lib/postgresql/data
  database-gui:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${DATABASE_GUI_ADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${DATABASE_GUI_ADMIN_PASSWORD}
    ports:
      - 8080:80
  ###############
  # Search engine
  ###############
  search-engine:
    build:
      context: search-engine
      dockerfile: Dockerfile.local
    environment:
      - SEARCH_ENGINE_PORT=3000
      - SEARCH_ENGINE_VECTOR_HOST=search-engine-vector
      - SEARCH_ENGINE_VECTOR_PORT=6334
      - SEARCH_ENGINE_VECTOR_COLLECTION_NAMES=item_summary,analysis_keyword
      - SEARCH_ENGINE_VECTOR_SIZE=768 # See: https://huggingface.co/jinaai/jina-embeddings-v2-base-en/blob/d411fe9/config.json#L18
    volumes:
      - ./:/usr/src/newswaters/
    tty: true
    working_dir: /usr/src/newswaters/search-engine/
  search-engine-vector:
    image: qdrant/qdrant:v1.6.1
    environment:
      - QDRANT__SERVICE__GRPC_PORT=6334
    volumes:
      - ./search-engine-vector/storage:/qdrant/storage
  ##############
  # Applications
  ##############
  beach:
    build:
      context: ./beach
      dockerfile: Dockerfile.local
    depends_on:
      database:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://${DATABASE_USER}:${DATABASE_PASSWORD}@database:${DATABASE_PORT}/${DATABASE_DB}
    volumes:
      - ./:/usr/src/newswaters/
    tty: true
    working_dir: /usr/src/newswaters/beach/
  inference:
    build:
      context: ./newswaters-inference
      dockerfile: Dockerfile.local
    environment:
      - INFERENCE_PORT=3000
    volumes:
      - ./:/usr/src/newswaters/
      - ./models/:/usr/src/models/
    tty: true
    working_dir: /usr/src/newswaters/newswaters-inference/
  job:
    build:
      context: ./newswaters-job
      dockerfile: Dockerfile.local
    depends_on:
      database:
        condition: service_healthy
    environment:
      - DATABASE_HOST=database
      - DATABASE_PORT=${DATABASE_PORT} # To connect to a remote database if necessary
      - DATABASE_DB=${DATABASE_DB}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - SEARCH_ENGINE_HOST=search-engine
      - SEARCH_ENGINE_PORT=3000
      - SEARCH_ENGINE_VECTOR_SUMMARY_COLLECTION_NAME=item_summary
      - SEARCH_ENGINE_VECTOR_KEYWORD_COLLECTION_NAME=analysis_keyword
      - INFERENCE_HOST=inference
      - INFERENCE_PORT=3000
    volumes:
      - ./:/usr/src/newswaters/
    tty: true
    working_dir: /usr/src/newswaters/newswaters-job/
  whistler:
    build:
      context: ./whistler
      dockerfile: Dockerfile.local
    depends_on:
      database:
        condition: service_healthy
    environment:
      - DATABASE_HOST=database
      - DATABASE_PORT=${DATABASE_PORT} # To connect to a remote database if necessary
      - DATABASE_DB=${DATABASE_DB}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - SEARCH_ENGINE_HOST=search-engine
      - SEARCH_ENGINE_PORT=3000
      - SEARCH_ENGINE_VECTOR_COLLECTION_NAMES=item_summary,analysis_keyword
      - ECHOLOCATOR_HOST=echolocator
      - ECHOLOCATOR_PORT=3000
      - WHISTLER_PORT=3000
    ports:
      - 3000:3000
    volumes:
      - ./:/usr/src/newswaters/
    tty: true
    working_dir: /usr/src/newswaters/whistler/
